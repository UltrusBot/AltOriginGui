plugins {
	alias libs.plugins.fabric.loom
	alias libs.plugins.loom.quiltflower
	alias libs.plugins.publishing
	id 'maven-publish'
}
sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

base {
	archivesName = project.archives_base_name
}
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		name = "Quilt"
		url = uri("https://maven.quiltmc.org/repository/release")
	}
	maven {
		name = "Quilt Snapshots"
		url = uri("https://maven.quiltmc.org/repository/snapshot")
	}
	maven { url = "https://api.modrinth.com/maven" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release/" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url = "https://maven.terraformersmc.com/" }
	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
			includeGroupByRegex 'dev\\.onyxstudios.*'
		}
	}
	mavenLocal()
}

dependencies {
	minecraft(libs.minecraft)
	mappings(variantOf(libs.quilt.mappings) { classifier("intermediary-v2") })
	modImplementation(libs.fabric.loader)
	modImplementation(libs.fabric.api)
	modImplementation(libs.modmenu)
	modImplementation(libs.origins)

	implementation(libs.mixinextras)
	annotationProcessor(libs.mixinextras)
	include(libs.mixinextras)

}

//var mod = createModReleaseMetadata(
//		"Alternate Origin UI v$project.version+${libs.minecraft.get().getVersionConstraint().displayName}",
//		file("$rootDir/CHANGELOG.md"),
//		["1.20.1"],
//		["fabric", "quilt"],
//		"remapJar",
//		["remapSourcesJar"],
//		"v${project.version}+${libs.minecraft.get().getVersionConstraint().displayName}",
//		false
//)
//modrinthInfo(mod, "altorigingui", ["origins"])
//githubInfo(mod, "UltrusBot", "AltOriginGui", "1.20")
//curseforgeInfo(mod, TaskPublishCurseForge, "873788", [], ["origins"])

publishMods {
	displayName = "Alternate Origin UI v$project.version+${libs.minecraft.get().getVersionConstraint().displayName}"
	file = remapJar.archiveFile
	changelog = file("$rootDir/CHANGELOG.md").text
	version = project.version
	type = STABLE
	modLoaders.addAll("fabric", "quilt")
	curseforge {
		projectId = "873788"
		minecraftVersions.add("1.20.2")
		accessToken = providers.environmentVariable("CF_API_KEY")
	}
	modrinth {
		projectId = "ldWHqZwQ"
		minecraftVersions.add("1.20.2")
		accessToken = providers.environmentVariable("MODRINTH_TOKEN")
	}
	github {
		repository = "UltrusBot/AltOriginGui"
		commitish = "1.20.2"
		accessToken = providers.environmentVariable("GH_TOKEN")
		tagName = "v$project.version"
	}

	dryRun = false
}
processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archives_base_name}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}